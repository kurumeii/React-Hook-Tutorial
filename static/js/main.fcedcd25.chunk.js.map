{"version":3,"sources":["reportWebVitals.js","Components/Layout/Header.js","Components/TodoItem.js","Components/Todos.js","Components/AddTodo.js","Store/Containers/Footer.js","Store/Actions/changeTheme.js","Components/Layout/Footer.js","Components/TodoApp.js","Store/Reducers/themeReducer.js","Store/Reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","React","Component","TodoItem","props","todo","completed","id","title","handleChange","deleteTodo","type","checked","onChange","onClick","Icon","fitted","name","size","Todos","todos","map","AddTodo","useState","setTitle","onSubmit","e","preventDefault","addTodo","placeholder","value","target","connect","state","themeColor","color","dispatch","saveColorTheme","payload","saveTheme","submitThemeColor","console","log","useEffect","JSON","stringify","document","documentElement","style","setProperty","TodoApp","setState","axios","get","params","_limit","resp","data","newTodo","uuidv4","post","delete","filter","initState","combineReducers","action","Object","assign","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"wMAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gDCGCQ,E,uKAPP,OACI,wBAAQC,UAAU,mBAAlB,SACI,oBAAIA,UAAU,eAAd,mC,GAJKC,IAAMC,W,QCwBZC,MAtBf,SAAkBC,GAAO,MAGgBA,EAAMC,KAA/BC,EAHS,EAGTA,UAAWC,EAHF,EAGEA,GAAIC,EAHN,EAGMA,MACfC,EAA6BL,EAA7BK,aAAcC,EAAeN,EAAfM,WACtB,OACI,qBAAIV,UAAU,YAAd,UACI,uBACIW,KAAK,WACLC,QAASN,EACTO,SAAU,WAAQJ,EAAaF,MAEnC,sBAAMP,UAAWM,EAAY,YAAc,KAA3C,SACKE,IAEL,wBAAQR,UAAU,aACdc,QAAS,WAAQJ,EAAWH,IADhC,SACuC,cAACQ,EAAA,EAAD,CAAMC,QAAM,EAACC,KAAK,QAAQC,KAAK,gBCCvEC,MAjBf,SAAef,GACP,OACI,qBAAKJ,UAAU,QAAf,SACI,6BAEKI,EAAMgB,MAAMC,KAAI,SAAChB,GAAD,OACb,cAAC,EAAD,CAEAA,KAAMA,EACNI,aAAcL,EAAMK,aACpBC,WAAYN,EAAMM,YAHbL,EAAKE,YCmBnBe,MA3Bf,SAAiBlB,GAAQ,IAAD,EACMmB,mBAAS,IADf,mBACbf,EADa,KACNgB,EADM,KAapB,OACI,uBAAMxB,UAAU,iBAAiByB,SAPrB,SAAAC,GACZA,EAAEC,iBACFvB,EAAMwB,QAAQpB,GACdgB,EAAS,KAIT,UACI,uBAAOb,KAAK,OACRkB,YAAY,0BACZ7B,UAAU,aACV8B,MAAOtB,EACPK,SAhBU,SAAAa,GAClBF,EAASE,EAAEK,OAAOD,UAgBd,uBAAOnB,KAAK,SACRmB,MAAM,SACN9B,UAAU,qB,QCnB1B,IAYegC,eANS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,UARC,SAAAC,GAAQ,MAAK,CACpCA,WACAC,eAAgB,SAAAF,GAAK,OAAIC,ECLJ,SAAAD,GACrB,MAAQ,CACJxB,KAAM,eACN2B,QAAS,CACLH,UDC0BI,CAAUJ,QAUjCH,EEXA,SAAgB5B,GAE3B,IAAMoC,EAAmB,SAACL,GAClBA,IACAM,QAAQC,IAAI,qBACZtC,EAAMiC,eAAeF,KAS7B,OALAQ,qBAAU,WACNF,QAAQC,IAAI,qCAAuCE,KAAKC,UAAUzC,IAClE0C,SAASC,gBAAgBC,MAAMC,YAAY,eAAgB7C,EAAM8B,WAAWC,SAC7E,CAAC/B,IAGA,qBAAKJ,UAAU,SAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,sBAAMO,GAAG,OAAT,2BACA,wBAAQO,QAAS,kBAAM0B,EAtB3B,YAsBkDxC,UAAU,YACxD,wBAAQc,QAAS,kBAAM0B,EAtB1B,YAsBkDxC,UAAU,aACzD,wBAAQc,QAAS,kBAAM0B,EAtBxB,YAsBkDxC,UAAU,uB,yBC6C5DkD,MA/Df,WAAoB,IAAD,EAEW3B,mBAAS,CAC/BH,MAAO,KAHI,mBAERa,EAFQ,KAEDkB,EAFC,KAkDf,OAXAR,qBAAU,WAONS,IAAMC,IAAI,6CANK,CACXC,OAAQ,CACJC,OAAQ,MAKX9D,MAAK,SAAC+D,GAAD,OAAUL,EAAS,CAAE/B,MAAOoC,EAAKC,YAC5C,IAGC,sBAAKzD,UAAU,YAAf,UACI,cAAC,EAAD,IAEA,cAAC,EAAD,CAAS4B,QA9BD,SAACpB,GACb,IAAMkD,EAAU,CACZnD,GAAIoD,cACJnD,MAAOA,EACPF,WAAW,GAEf8C,IAAMQ,KAAK,6CAA8CF,GACpDjE,MAAK,SAAA+D,GACFf,QAAQC,IAAIc,EAAKC,MACjBN,EAAS,CACL/B,MAAM,GAAD,mBAAMa,EAAMb,OAAZ,CAAmBoC,EAAKC,eAqBrC,cAAC,EAAD,CAAOrC,MAAOa,EAAMb,MAChBX,aAlDgB,SAACF,GACzB4C,EAAS,CACL9C,KAAM4B,EAAMb,MAAMC,KAAI,SAAChB,GAGjB,OAFEA,EAAKE,KAAOA,IACZF,EAAKC,WAAaD,EAAKC,WAClBD,QA8CTK,WA1CO,SAACH,GAChB6C,IAAMS,OAAN,qDAA2DtD,IACtDd,MAAK,SAAA+D,GACFL,EAAS,CACL/B,MAAM,YAAKa,EAAMb,MAAM0C,QAAO,SAAAzD,GAAU,OAAOA,EAAKE,KAAOA,cAuCnE,cAAC,EAAD,Q,OChERwD,EAAW,CACX5B,MAAO,aCAI6B,kBAAgB,CAC3B7B,MDEW,SAAsBF,EAAOgC,GAGxC,OAFAhC,EAAQ8B,EAEDE,EAAOtD,MACV,IAAK,eAED,OADA8B,QAAQC,IAAI,iBAAkBE,KAAKC,UAAUZ,IACtCiC,OAAOC,OAAO,GAAIlC,EAAO,CAACE,MAAO8B,EAAO3B,QAAQH,QACvD,QACI,OAAO4B,MEJjBK,G,YAAQC,YAAYC,IAC1BC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFtB,SAAS2B,eAAe,SAM1BnF,M","file":"static/js/main.fcedcd25.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header-container\">\r\n                <h1 className=\"header-title\">Simple Todo App</h1>\r\n            </header>\r\n        );\r\n    }\r\n};\r\nexport default Header;","import React from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nfunction TodoItem(props) {\r\n\r\n        /*This is the destructure technic */\r\n        const { completed, id, title } = props.todo;\r\n        const { handleChange, deleteTodo } = props;\r\n        return (\r\n            <li className='todo-item'>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={completed}\r\n                    onChange={() => { handleChange(id) }}\r\n                />\r\n                <span className={completed ? \"completed\" : null}>\r\n                    {title}\r\n                </span>\r\n                <button className=\"btn-remove\"\r\n                    onClick={() => { deleteTodo(id) }}><Icon fitted name='trash' size=\"large\" />\r\n                </button>\r\n            </li>\r\n        );\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nfunction Todos(props){\r\n        return (\r\n            <div className=\"todos\">\r\n                <ul>\r\n                {/* Get the props from parent component then countinue to parse down its descendants */}\r\n                    {props.todos.map((todo) => (\r\n                        <TodoItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        handleChange={props.handleChange}\r\n                        deleteTodo={props.deleteTodo} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    \r\n};\r\nexport default Todos;","import React, { useState } from 'react';\r\n\r\nfunction AddTodo(props) {\r\n    const [title, setTitle] = useState('');\r\n\r\n    const onInputChange = e =>{\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const addTodo = e =>{\r\n        e.preventDefault();\r\n        props.addTodo(title);\r\n        setTitle('');\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-container\" onSubmit={addTodo} >\r\n            <input type=\"text\"\r\n                placeholder=\"Write something here...\"\r\n                className=\"input-text\"\r\n                value={title}\r\n                onChange={onInputChange} />\r\n            <input type=\"submit\"\r\n                value=\"Submit\"\r\n                className=\"input-submit\" />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddTodo;\r\n\r\n","import { connect } from 'react-redux'\r\nimport { saveTheme } from '../Actions/changeTheme';\r\nimport Footer from '../../Components/Layout/Footer';\r\n\r\n//Map \"dispatch action tới reducer\" thành các props\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatch,\r\n    saveColorTheme: color => dispatch(saveTheme(color)),\r\n});\r\n\r\n//Map state cho các props để component sử dụng\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        themeColor: state.color\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Footer);","\r\n\r\nexport const saveTheme = color =>{\r\n    return ({\r\n        type: \"CHANGE_THEME\",\r\n        payload: {\r\n            color\r\n        }\r\n    })\r\n}","import React, { useEffect } from 'react';\r\n\r\nconst RED = '#ff0000';\r\nconst BLUE = \"#0000ff\";\r\nconst PURPLE = \"#9d56af\";\r\n\r\nexport default function Footer(props) {\r\n\r\n    const submitThemeColor = (color) => {\r\n        if (color) {\r\n            console.log('handleChangeTheme');\r\n            props.saveColorTheme(color);\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        console.log(\"UNSAFE_componentWillReceiveProps: \" + JSON.stringify(props));\r\n        document.documentElement.style.setProperty(\"--main-color\", props.themeColor.color);\r\n    }, [props])\r\n\r\n    return (\r\n        <div className=\"footer\" >\r\n            <div className=\"vertical-center\">\r\n                <span id=\"span\">Choose Theme </span>\r\n                <button onClick={() => submitThemeColor(RED)} className=\"dot red\" />\r\n                <button onClick={() => submitThemeColor(BLUE)} className=\"dot blue\" />\r\n                <button onClick={() => submitThemeColor(PURPLE)} className=\"dot purple\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Header from '../Components/Layout/Header';\r\nimport Todos from './Todos';\r\nimport AddTodo from './AddTodo';\r\nimport Footer from '../Store/Containers/Footer';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nfunction TodoApp() {\r\n\r\n    const [state, setState] = useState({\r\n        todos: [],\r\n    });\r\n    // Event handler\r\n    const handleCheckboxEvent = (id) => {\r\n        setState({\r\n            todo: state.todos.map((todo) => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed;\r\n                } return todo;\r\n            })\r\n        })\r\n    };\r\n    const deleteTodo = (id) => {\r\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n            .then(resp => {\r\n                setState({\r\n                    todos: [...state.todos.filter(todo => { return todo.id !== id })]\r\n                })\r\n            })\r\n    };\r\n\r\n    const addTodo = (title) => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        };\r\n        axios.post('https://jsonplaceholder.typicode.com/todos', newTodo)\r\n            .then(resp => {\r\n                console.log(resp.data);\r\n                setState({\r\n                    todos: [...state.todos, resp.data]\r\n                })\r\n            })\r\n\r\n    };\r\n    useEffect(() => {\r\n        const config = {\r\n            params: {\r\n                _limit: 10\r\n            }\r\n        }\r\n        //Get request\r\n        axios.get(\"https://jsonplaceholder.typicode.com/todos\", config)\r\n            .then((resp) => setState({ todos: resp.data }))\r\n    }, []);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Header />\r\n            {/* Parse prop to children component */}\r\n            <AddTodo addTodo={addTodo} />\r\n            <Todos todos={state.todos}\r\n                handleChange={handleCheckboxEvent}\r\n                deleteTodo={deleteTodo}/>\r\n            <Footer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoApp;","\r\n\r\nlet initState ={\r\n    color: \"#843bb5be\"\r\n}\r\n\r\nexport default function themeReducer(state, action){\r\n    state = initState;\r\n    // eslint-disable-next-line default-case\r\n    switch(action.type){\r\n        case \"CHANGE_THEME\":\r\n            console.log('themeReducer: ', JSON.stringify(state));\r\n            return Object.assign({}, state, {color: action.payload.color});\r\n            default:\r\n                return initState;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport color from './themeReducer';\r\n\r\nexport default combineReducers({\r\n    color\r\n});\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport TodoApp from \"./Components/TodoApp.js\";\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './Store/Reducers'\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css';\n\nconst store = createStore(rootReducer);\nReactDOM.render(\n  <Provider store={store}>\n    <TodoApp />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}